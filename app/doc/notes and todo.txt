GGR Git

---
getting better error messages for syntax errors that tell you file name, line number
Search: ruby rails getting-filename linenumber syntax-error erb view console load view

template = ERB.new File.new("path/to/template.erb").read, nil, "%"
template.result

how to load parse all views from command-line

Unix (or ruby) can be used to find all files ending in .erb below some point.
for each file, use template

SOLUTION: look at server log
---


created new account at github.com

generate local SSH RSA keys:

ssh-keygen -t rsa -C "mikesdesignbuild@gmail.com”

add SSH key to github and get content from file in .ssh/id_rsa.pub

https://github.com/mikesdesignbuild/ggr.git

git remote add origin https://github.com/mikesdesignbuild/ggr.git
git push -u origin master 

HEROKU setup:
heroku keys:add
heroku create --stack cedar

http://vast-everglades-3866.herokuapp.com/
git push heroku master
heroku open
heroku rename gloucestergigrowers

 Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

gem ‘sqlite3’   # should be:

group :development, :test do
    gem "sqlite3"
    gem "better_errors"
    gem "binding_of_caller"
end

group :production, :staging do
    gem "pg"
end

How to bundle install with “development” option?
bundle install --without production    # but it didn’t work. FIX: used gem ‘pg’ with version number.

How to reset the database and erase all data in Ruby on Rails?
rake db:reset    then    rake db:migrate 

——
Development:
Creating static page:
Creating controller:

rails new ggr

rails generate scaffold User name:string email:string
TODO: commit after each generate command.
rake db:migrate RAILS_ENV=development 

TODO: create events, participants

When application.js has //= require jquery   where does the jquery live? app? vendor? other?
??? tried to put bootstrap in lib and vendor, but application.js could not find it.

bundle exec rake -P

——
GOT application error on heroku.  Why?? How to view logs on heroku?
WARNINGS:
       Include 'rails_12factor' gem to enable all platform features

—
TODO: create events resource

rails generate scaffold Participant user:integer event:integer captain:boolean coxswain:boolean participated:boolean late:boolean

---
TODO: show id’s on all resources: users, events, participants.  Done. Show only on index and show because they are read-only. DONE.

set a current user as controller on user.

where does a “edit_user_path” variable get defined?  routes.db
—
how to break at a line and show console in debug mode??  

create sample events, sample participants, random numbers.

/events   new=> create =>  /events/1
when new event is created, show form for add participant

/events/1/participants
/events/1/participants/3 => /users/22       is 3 the user id or the participant number? 
/events/1/participants/new  (use current user as default)

add member directory.  

member lookup count max per hour, day, week, month, year.  

/members/1

member can be publicly listed.  Encouraged for “public” figures such as training, committee chairs, etc.

on any user, select options: phone call, email, text, message??

rake db:migrate

SQLite3::SQLException: duplicate column name: email: ALTER TABLE "users" ADD "email" varchar(255) DEFAULT '' NOT NULL/Library/Ruby/Gems/2.0.

when calling rake db:reset, get:
uninitialized constant Admin
I had tried to get rid of all traces of Admin.  isn’t database deleted?



When submitting from: http://localhost:3000/users/sign_in, get error;

undefined method `encrypted_password=' for #<User:0x007ff796c51120>

User.new.respond_to?(:encrypted_password=)   SHOULD return true.
https://github.com/plataformatec/devise/issues/589

user_signed_in?  current_user

Done: got email to be sent out through console
TODO: get email sent through web app in dev env

TODO:
use console to create a sample member, sample event, and then add a participation through the event.  

TODO: show all participants on a row/event
  add “name” to member DONE.

TODO: create member profile using current member.  

TODO: add “admin” field to member

TODO: how to receive different button presses “Join” vs. “Update” vs. “Cancel”.  Which controller takes action?
   

accepts_nested_attributes_for   reject_if
fields_for

f.checkbox :_destroy

Nested forms:
http://railscasts.com/episodes/196-nested-model-form-part-1  
http://railscasts.com/episodes/197-nested-model-form-part-2

——
TODO:
Have a controller method on events that handles participation
  /events/1/add_participation.html?captain=x&coxswain=y
Use receives sub fields for x. 
Make seed that creates some sample data

REQ:
auto cancel rows if <2 people the day of the row.
REQ:
notify member if tomorrow's row has seats available where user has asked 

TODO:  <% render @participations %>   will use _participation.html.erb

event.participation.create!
                   .build takes keyed args
                   .count 

class Participation < ActiveRecord::Base
  validates :event_id, presence: true

create_table participations
end
add index :participations, [:event_id, :created_at]

event
  has_many :participations, dependent: destroy
  has_one: type, as: event_type
  has_one: location, as: event_location
  has_one: category, as: event_category


1.hour.ago
1.hour.from_now

use seeds (or unknown???) to create data for database.

-----
make method that takes classes to export and it creates one file per class in the db/seed_data directory.  Typically called from command line manually:

export_seed_data_for_classes (EventLocation, EventType)
db/seed_data
  event_locations.txt
  event_type.txt

event_locations.txt:
mg|maritime|1 harbor loop

method to read in data that is put in seeds.rb:

import_seed_data_for_classes (EventLocation, EventType)
https://github.com/kevTheDev/seed_dumper

MS: couldn't find any existing utilities for this.  Not too important for now.  Could just use seed_dumper if ruby syntax is ok.
Should be tool that looks at field types in class and calls appropriate conversion.

----
TODO: 1/1
make event using type and location pull-downs.  Use date picker, but use default date.
generate new views for event controller.  Can you use existing model and database to generate controller and views?
  No.  

Q: when creating associations, in migrations, use t.references :something_id or  t.integer :something  or  ???
Q: how to find an object by its unique key?  event_type.by_name.row (or similar)  EventType.find(:username "fred")


class Book < ActiveRecord::Base
  belongs_to :subject
  validates_presence_of :title
  validates_numericality_of :price, :message=>"Error Message"
end

How to generate create_table from model??

$ rails generate migration AddUserRefToProducts user:references
     creates user_id field

$ rails generate migration AddDetailsToProducts price:decimal{5,2} supplier:references{polymorphic}


limit Sets the maximum size of the string/text/binary/integer fields
precision Defines the precision for the decimal fields
scale Defines the scale for the decimal fields
polymorphic Adds a type column for belongs_to associations
null Allows or disallows NULL values in the column.

validates :foreign_key, uniqueness: true 
belongs_to :client, counter_cache: true

Q: Should you modify models directly, or use generator to generate the migrations/create_table and models.  

Client.find_by first_name: 'Lifo'   ===   Client.where(first_name: 'Lifo').take

User.find_each(start: 2000, batch_size: 5000) do |user|
  NewsLetter.weekly_deliver(user)
end

Client.where("orders_count = ? AND locked = ?", params[:orders], false)
Client.where("created_at >= :start_date AND created_at <= :end_date",
  {start_date: params[:start_date], end_date: params[:end_date]})

  Author.joins(:posts).where(posts: {author: author})

  Client.order(created_at: :desc)

  Client.select(:name).distinct

  Client.limit(5).offset(30)
  Order.select("date(created_at) as ordered_date, sum(price) as total_price").group("date(created_at)")

  .group("date(created_at)").having("sum(price) > ?", 100)

  SomeModel.none # returns an empty Relation and fires no queries.
  Client.readonly.first
 
 Scoping allows you to specify commonly-used queries which can be referenced as method calls on the association objects or models.  Scopes are also chainable within scopes.

 class Post < ActiveRecord::Base
  def self.published
    where(published: true)
  end
  def self.published_and_commented
    published.where("comments_count > :x", {x: 3})   #  or published.where("comments_count > ?", 3)
  end
end

Client.select(:name).distinct
Client.select(:name, :created_by).distinct   ??? does this work??

Post.joins(:category, :comments)
SELECT posts.* FROM posts
  INNER JOIN categories ON posts.category_id = categories.id
  INNER JOIN comments ON comments.post_id = posts.id

time_range = (Time.now.midnight - 1.day)..Time.now.midnight
Client.joins(:orders).where(orders: {created_at: time_range})

Post.includes(:category, :comments)

Applying a default scope
def self.default_scope
    # Should return an ActiveRecord::Relation.
end

find_or_create_by returns either the record that already exists or the new record

class Person < ActiveRecord::Base
  self.primary_key = "person_id"
end

.exists?

TODO: add roles using gem .

EventTypes.find_by :first_name "mike"

validates_uniqueness_of :user_name

MS: should be able to generate create_table from model class definition.  Command line for scaffold would be difficult to maintain and isn't a good way to store the model.  A model should have all the info.  params should use model to identify inputs.  If you set the primary_key in a model, will it use that instead of creating "id" field?

Would need a construct to define a field without any validations, but that would basically be a no-op, similar to not-null.
Would need introspection to get at the names, types, and constrains on fields.
A set of models SHOULD contain the information to create a complete schema.rb
  All the join tables would be created automatically.
  Doesn't seem to be a commonly used utility to do that. 
Currently, Rails has three places to fully define a data model.  Model.rb, schema.rb & migrations, and the command-line from the generator.  I strongly feel that it should be one place -- the model.rb. 
MS: workaround is to manually update the "base" migration.  

migrate file: 20140101140320_schema.rb  will generate schema.rb with:
  ActiveRecord::Schema.define(version: 20140101140320) do
  Notice that the number

@user = User.find(params[:id])
@user.students << current_user


  has_many :teacher_links, :foreign_key => :student_id, :dependent => :destroy, :class_name => "TeacherStudentLink"
  has_many :student_links, :foreign_key => :teacher_id, :dependent => :destroy, :class_name => "TeacherStudentLink"
  has_many :students, :through => :student_links
  has_many :teachers, :through => :teacher_links

--------

SHARE: best debugging is to get error in browser with command listener.  debug

DONE: show index.html    index and show don't work.  Why?  Had views. 
WAIT: class var and @ vs. @@ vs. self vs. initial vs. ???   
DONE: need to understand how to calculate paths for links.  implement now.
DONE: button on instance row in index
DONE: back button should go back to index page.
DONE: New and update not working.  Don't show "id" or "created_at" "updated_at".  
  Now, New is blanking the inputs.  Update isn't saving to the database.
DONE: show all models in nav

DONE: implement NEXT and PREV buttons when looking at a show view.
   http://stackoverflow.com/questions/5452937/rails-previous-and-next-record-from-previous-query

WAIT: flag on field to say that objects should be visible and nested.  destroy=true??
  visible and nested object shouldn't show values for the object they are shown in.
  an event
    a participation
      member
      (hidden event)
      joined_on
    a participation
  if has_one, then show one.  if has_many, then show list of instances.

DONE try to save boat when given a location in a text field

TODO: get foreign_key fields to show @instances in a pop-up. 
TODO: dispatch field render based on field type

Search: ruby rails model foreign-key

---
Search: ruby rails from model class, introspect to find has_many has_one relationships meta-data

http://apidock.com/rails/ActiveRecord/Associations/ClassMethods

Thing.reflections.collect{|a, b| b.class_name if b.macro==:belongs_to}.compact 
#=> ["Foo", "Bar"]

Event.reflections.collect{|a, b| [a, b.class_name, b.macro] }.compact 

 [[:event_type, "EventType", :belongs_to], [:location, "Location", :belongs_to], [:boat, "Boat", :belongs_to], [:participation, "Participation", :has_one], [:participations, "Participation", :has_many], [:members, "Member", :has_many]]

 Great, returns fields in order they appear in the model!

Event.reflections for location which should   macro :belongs_to, name :location, scope nil, options, active_record Event, plural_name "locations", collection false

So, when showing an @instance, after showing @field_order, show associations for has_one and has_many.
  show fieldname, then if not nil,
    view_name = {name.pluralize}  @submodel= field_name.singular.constantize 
    for has_many, render views/{name.pluralize}/index_nested  and give it: @nested_model and @nested_data 
    for has_one, render views/{name.pluralize}
Event.location

  location/views/_show_nested.html.erb
     _new_nested.html.erb
     _edit_nested.html.erb
     _index_nested.html.erb  (for has_many)

Event.members
  _nested_show

Event.participations
  _index_nested.html.erb  


-----
Each controller sets field order for user based on permissions. 

Rights:

Admin:
  Id 
  Created_at=read
  Foo=aware
  Yum=initialiZe 
  Action=change/execute
  BoatController
     class=hidden
     Somefield=change
     Line_items=append
     Foo=method returns value given instance.  

Owner
  Call predicate to get info

Specific user can have permissions

What about data driven permissions?  Can't change past event. 

  Event
    Class=

Where to use?
Setting field order on controller. 
Looping through fields in view
Showing buttons on form
Rendering navigation
Before filter on generic controller to look at action. 

How to represent creating fields?
  Ex: line items in order. 

How to represent 

Customize any methods that generate UI for showing actions or data. Form_for. 

POSTPONE!!

Temp: how to show id, but not edit

Permissions:
  id = :read
  Created_at=:read
  Updated_at=:read

Ability to edit ones own profile. 


For a new session, create permission object for user. 

"Meta over manual". in addition to: Convention over configuration. 

TODO: What method gets called to render instances in partial view?  Needs to check field order. <% render @instances%>

Post.reflections[:comments].table_name # => "comments"
Post.reflections[:comments].macro # => :has_many
Post.reflections[:comments].primary_key_name # => "message_id"

_meta.comments = { display: inline }

admin can set defaults for each field for each model. On index listing, click "set defaults" see form with inputs. Gets data from database. Row with special id. 0. Can set dynamic values. {1.hour.ago}

 Packaging into gem. 
Inherit from new application controller. And helper. 
Default views. 
Tests 
To use: remove generated files for views and controllers. 
Need: generate model only. Add validates and default for all fields. 

Generate database schema from model. 
Generate a diff between two database schemas as a migration. 

Rails generate schema --All
Rails generate schema Model1.rb Model2.rb

Generator loads all the models, then for each, generates migration file. 
Looks at columns validates to get 

Does column hash exist without database? No? 

Dynamically add field in model needs to add columns in database. 

Need diff between two models!

Convert diff into database migration!

Easier: generate full schema from model. Find/create tool to take diff of schemas to create migration. 

How to know indexes to create from a model? Look for find methods by name convention. 

So, generate schema from model file and or in memory. 

Cancan?
Works for actions on controllers but not fields. Could be used for fields? Requires editing views through if statements. 

Search for examples of permission files and data formats. 

Concepts of all, 
Fields, action. 

——
TODO: show field based on type. 
   TODO: How to tell if field is foreign key from meta-field info?  (ends with _id)
use reflections to get "has_many" or "has_one"

Goal: when modifying a boat, select a location from a popup
  when show/view, show first field on instance
<%#= collection_select(:event, :boat, Boat.all, :id, :name) %>

----
Idea: could start with models completely in memory (not persisted), then create_tables when needed to persist objects
   ActiveModel for in-memory object model.  vs. ActiveRecord
Idea: integrate a SVG diagram graphing tool so people can see model relationships

----
Add ApplicationModel on SLOtility
Create seeds using find_name

KNOW: create method expects an object in "foo" foreign field, but an integer or string in a "foo_id" field.

class using belongs_to for field "foo" means that it has a database field "foo_id"

REMEMBER: belongs_to is for a 1 to many relationship and that belongs_to goes in the model that has a foreign-key to another model.  has_one is for a one-to-one relationship.  belongs_to is part of a 1:M or 1:1 relationship.

--------------------
NEXT:
Date input

Goal: UI where I can see all the participations on an event, and can add one for me, the current user.
   Should also be able to click "remove myself from row" that sets "left_on" datetime.

Search feature: Click "Search" on any object (or home page) and it searches within that object and presents form to fill out. Dynamically searches as you type.  Can select pull-downs.  Ex: on Events, click "search", in boat: select Gannet, in date, select "past" or "future", member: select name, day.
Pre-defined queries for: recently updated.  

Some models show all instances (locations, boats).  Some show only latest updated (participations).  

Save named searches in cookies.  

Show events coming up in next month, paged by 20, limit 100

In listing, show total number of instances.  

Add user for log-in and with roles.  Use roles for generic views and controllers.  

Guest can add themselves to at most one row.  one rec row that is at least 4 days away that has 4 to 6 participants where no more than 1 other guest rower.
  Notifies person responsible for guest members

View for showing guest members and rows with guests.

Members can have text field with their role in the club.  Those members are public on the member's page.

Event.my_scheduled_rows

Integrate authentication.

in 'show' view, show the created_at and modified_at(?) values using (words method: time_ago_in_words)

Member should be able to create a new captain and see captains that have not been approved.  Becomes of a list of potential captain training participants.

---
getting 
Search: ruby rails user-defined class methods on model

 Member.methods(false)

 Member.method(:captains)

 if plural, then render _index on value, else (singular) and render _show on value, 

Search: ruby method source_location API metadata introspection

http://ruby-doc.org/core-2.1.0/Method.html

----
In my view, it shows id's in fields rather than objects.  When finding objects, how to specify to create objects one level down?
Search: ruby rails find fill-object one-level depth
  Nothing good.

TODO: extend custom render method to dispatch views based on whether viewing on a mobile_device? method

---
Problem: SyntaxError at /events
unknown regexp options - tr

Solution: can't put a comment on a line in erb file with <%= some # commend %>
----
index views (and other views) may have options as to whether to expand a subform (for a search form, ex.) use session cookies to store these options and read the cookie in your view.  Alternatively, use javascript to hide/show that section.  Probably better.
----
class User
  SOME_FIELD = 1
end
double-colon references class field.  User::SOME_FIELD

---
<% yield :named_content %> vs. <% yield %>
<% content_for :named_content do %>
 some erb
<% end %>

<% content_for :named_content, "home" %>

So, a view calls content_for to supply content for the layout view.  

Layout:
<% if content_for?(:sidebar) %>
  <div><%= yield :sidebar %></div>
<% end %>

Use content_tag to surround a ruby output with HTML tag.

In ERB View:
content_tag_for :li, comment do
  comment.body
end

defaults should be defined in a model, and converted into database defaults in a migration.
A user might also store form defaults (by class).  Default might also be stored in a cookie and set using JavaScript. 

each class should have a set_defaults method that would do things like:

before_create hook:

def set_defaults
   if new && created_by.exists?  ??
     t.created_by=current_user
   if last_updated_by.exists?
     t.last_updated_by=current_user

   instance.version ||= 1
   instance.author = user  # or instance.author_id = user.id
end

add created_by, updated_by fields using macro:
t.created_updated_by

hooks can be conditional:
 before_create :do_this, if: :really?

MVP - model-view-presenter pattern
  maps fields on the model to the presenter  
  User#email becomes Signup#user_email if MVP is Signup

  class Signup < ActivePresenter::Base   # in app/models/signup.rb
    before_save :create_associations
    presents :user, :account

  SignupsController where creating  new one actually creates other objects by name.

if you don't want to save, put in update_attributes

resources :some_controller do
  member do
    post :shipping
    post :billing
    post :payment
  end
end

Need to read chapter 4: Controllers of Anti-patterns.  Specifically, nested controllers 

Responders.  
ApplicationController respond_to :html, :json, :xml
respond_with(@instance)  or respond_with(@instances)

----
A generic editor:
Any piece of content on the website should have an attribute that lets you edit that piece when you click on it with a special key.
Need each field to have a list of types.  
Change default to optional because they are separate.
Defaults should be role or group or person specific.  Defaults often change for one sessions.
Need to have optional help content for each field.
Ideally Given a field of content, should be able to see all the pages it appears on in context.
When viewing the site as a content editor, holding down a key and rolling over a piece of content should show the content piece name as overlay.
By declaring a field as an image, need options on image type to say how and where to store content.  
Should be able to see lists of objects in card format or table format.  A "key" card can show the name of each piece of content.
Card format makes a great way to seach by field as well.
When viewing an instance, can click "New Instance" or "Copy instance" where you select the fields to copy.  And those settings are remembered.
The height of textareas should be based on the size of the content.
When showing instances, long text fields should be summarized by number of words.
After editing an instance, clicking save should show 'read' mode where you have actions like next/prev, delete, find similar, click on related instances, preview.
When editing, might have auto-save where each field is updated when you leave it vs. wait until save.   When editing, click "Done".  Cancel requires confirmation.














