GGR Git

created new account at github.com

generate local SSH RSA keys:

ssh-keygen -t rsa -C "mikesdesignbuild@gmail.com”

add SSH key to github and get content from file in .ssh/id_rsa.pub

https://github.com/mikesdesignbuild/ggr.git

git remote add origin https://github.com/mikesdesignbuild/ggr.git
git push -u origin master 

HEROKU setup:
heroku keys:add
heroku create --stack cedar

http://vast-everglades-3866.herokuapp.com/
git push heroku master
heroku open
heroku rename gloucestergigrowers

 Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

gem ‘sqlite3’   # should be:

group :development, :test do
    gem "sqlite3"
    gem "better_errors"
    gem "binding_of_caller"
end

group :production, :staging do
    gem "pg"
end

How to bundle install with “development” option?
bundle install --without production    # but it didn’t work. FIX: used gem ‘pg’ with version number.

How to reset the database and erase all data in Ruby on Rails?
rake db:reset    then    rake db:migrate 

——
Development:
Creating static page:
Creating controller:

rails new ggr

rails generate scaffold User name:string email:string
TODO: commit after each generate command.
rake db:migrate RAILS_ENV=development 

TODO: create events, participants

When application.js has //= require jquery   where does the jquery live? app? vendor? other?
??? tried to put bootstrap in lib and vendor, but application.js could not find it.

bundle exec rake -P

——
GOT application error on heroku.  Why?? How to view logs on heroku?
WARNINGS:
       Include 'rails_12factor' gem to enable all platform features

—
TODO: create events resource

rails generate scaffold Participant user:integer event:integer captain:boolean coxswain:boolean participated:boolean late:boolean

---
TODO: show id’s on all resources: users, events, participants.  Done. Show only on index and show because they are read-only. DONE.

set a current user as controller on user.

where does a “edit_user_path” variable get defined?  routes.db
—
how to break at a line and show console in debug mode??  

create sample events, sample participants, random numbers.

/events   new=> create =>  /events/1
when new event is created, show form for add participant

/events/1/participants
/events/1/participants/3 => /users/22       is 3 the user id or the participant number? 
/events/1/participants/new  (use current user as default)

add member directory.  

member lookup count max per hour, day, week, month, year.  

/members/1

member can be publicly listed.  Encouraged for “public” figures such as training, committee chairs, etc.

on any user, select options: phone call, email, text, message??

rake db:migrate

SQLite3::SQLException: duplicate column name: email: ALTER TABLE "users" ADD "email" varchar(255) DEFAULT '' NOT NULL/Library/Ruby/Gems/2.0.

when calling rake db:reset, get:
uninitialized constant Admin
I had tried to get rid of all traces of Admin.  isn’t database deleted?



When submitting from: http://localhost:3000/users/sign_in, get error;

undefined method `encrypted_password=' for #<User:0x007ff796c51120>

User.new.respond_to?(:encrypted_password=)   SHOULD return true.
https://github.com/plataformatec/devise/issues/589

user_signed_in?  current_user

Done: got email to be sent out through console
TODO: get email sent through web app in dev env

TODO:
use console to create a sample member, sample event, and then add a participation through the event.  

TODO: show all participants on a row/event
  add “name” to member DONE.

TODO: create member profile using current member.  

TODO: add “admin” field to member

TODO: how to receive different button presses “Join” vs. “Update” vs. “Cancel”.  Which controller takes action?
   

accepts_nested_attributes_for   reject_if
fields_for

f.checkbox :_destroy

Nested forms:
http://railscasts.com/episodes/196-nested-model-form-part-1  
http://railscasts.com/episodes/197-nested-model-form-part-2

——
TODO:
Have a controller method on events that handles participation
  /events/1/add_participation.html?captain=x&coxswain=y
Use receives sub fields for x. 
Make seed that creates some sample data

REQ:
auto cancel rows if <2 people the day of the row.
REQ:
notify member if tomorrow's row has seats available where user has asked 

TODO:  <% render @participations %>   will use _participation.html.erb

event.participation.create!
                   .build takes keyed args
                   .count 

class Participation < ActiveRecord::Base
  validates :event_id, presence: true

create_table participations
end
add index :participations, [:event_id, :created_at]

event
  has_many :participations, dependent: destroy
  has_one: type, as: event_type
  has_one: location, as: event_location
  has_one: category, as: event_category


1.hour.ago
1.hour.from_now

use seeds (or unknown???) to create data for database.

-----
make method that takes classes to export and it creates one file per class in the db/seed_data directory.  Typically called from command line manually:

export_seed_data_for_classes (EventLocation, EventType)
db/seed_data
  event_locations.txt
  event_type.txt

event_locations.txt:
mg|maritime|1 harbor loop

method to read in data that is put in seeds.rb:

import_seed_data_for_classes (EventLocation, EventType)
https://github.com/kevTheDev/seed_dumper

MS: couldn't find any existing utilities for this.  Not too important for now.  Could just use seed_dumper if ruby syntax is ok.
Should be tool that looks at field types in class and calls appropriate conversion.

----
TODO: 1/1
make event using type and location pull-downs.  Use date picker, but use default date.
generate new views for event controller.  Can you use existing model and database to generate controller and views?
  No.  

Q: when creating associations, in migrations, use t.references :something_id or  t.integer :something  or  ???
Q: how to find an object by its unique key?  event_type.by_name.row (or similar)  EventType.find(:username "fred")


class Book < ActiveRecord::Base
  belongs_to :subject
  validates_presence_of :title
  validates_numericality_of :price, :message=>"Error Message"
end

How to generate create_table from model??

$ rails generate migration AddUserRefToProducts user:references
     creates user_id field

$ rails generate migration AddDetailsToProducts price:decimal{5,2} supplier:references{polymorphic}


limit Sets the maximum size of the string/text/binary/integer fields
precision Defines the precision for the decimal fields
scale Defines the scale for the decimal fields
polymorphic Adds a type column for belongs_to associations
null Allows or disallows NULL values in the column.

validates :foreign_key, uniqueness: true 
belongs_to :client, counter_cache: true

Q: Should you modify models directly, or use generator to generate the migrations/create_table and models.  

Client.find_by first_name: 'Lifo'   ===   Client.where(first_name: 'Lifo').take

User.find_each(start: 2000, batch_size: 5000) do |user|
  NewsLetter.weekly_deliver(user)
end

Client.where("orders_count = ? AND locked = ?", params[:orders], false)
Client.where("created_at >= :start_date AND created_at <= :end_date",
  {start_date: params[:start_date], end_date: params[:end_date]})

  Author.joins(:posts).where(posts: {author: author})

  Client.order(created_at: :desc)

  Client.select(:name).distinct

  Client.limit(5).offset(30)
  Order.select("date(created_at) as ordered_date, sum(price) as total_price").group("date(created_at)")

  .group("date(created_at)").having("sum(price) > ?", 100)

  SomeModel.none # returns an empty Relation and fires no queries.
  Client.readonly.first
 
 Scoping allows you to specify commonly-used queries which can be referenced as method calls on the association objects or models.  Scopes are also chainable within scopes.

 class Post < ActiveRecord::Base
  def self.published
    where(published: true)
  end
  def self.published_and_commented
    published.where("comments_count > :x", {x: 3})   #  or published.where("comments_count > ?", 3)
  end
end

Client.select(:name).distinct
Client.select(:name, :created_by).distinct   ??? does this work??

Post.joins(:category, :comments)
SELECT posts.* FROM posts
  INNER JOIN categories ON posts.category_id = categories.id
  INNER JOIN comments ON comments.post_id = posts.id

time_range = (Time.now.midnight - 1.day)..Time.now.midnight
Client.joins(:orders).where(orders: {created_at: time_range})

Post.includes(:category, :comments)

Applying a default scope
def self.default_scope
    # Should return an ActiveRecord::Relation.
end

find_or_create_by returns either the record that already exists or the new record

class Person < ActiveRecord::Base
  self.primary_key = "person_id"
end

.exists?

TODO: add roles using gem .

EventTypes.find_by :first_name "mike"

validates_uniqueness_of :user_name

MS: should be able to generate create_table from model class definition.  Command line for scaffold would be difficult to maintain and isn't a good way to store the model.  A model should have all the info.  params should use model to identify inputs.  If you set the primary_key in a model, will it use that instead of creating "id" field?

Would need a construct to define a field without any validations, but that would basically be a no-op, similar to not-null.
Would need introspection to get at the names, types, and constrains on fields.
A set of models SHOULD contain the information to create a complete schema.rb
  All the join tables would be created automatically.
  Doesn't seem to be a commonly used utility to do that. 
Currently, Rails has three places to fully define a data model.  Model.rb, schema.rb & migrations, and the command-line from the generator.  I strongly feel that it should be one place -- the model.rb. 
MS: workaround is to manually update the "base" migration.  

migrate file: 20140101140320_schema.rb  will generate schema.rb with:
  ActiveRecord::Schema.define(version: 20140101140320) do
  Notice that the number

--------

DONE: show index.html    index and show don't work.  Why?  Had views. 
WAIT: class var and @ vs. @@ vs. self vs. initial vs. ???   
DONE: need to understand how to calculate paths for links.  implement now.
DONE: button on instance row in index
DONE: back button should go back to index page.

TODO: New and update not working.  Don't show "id" or "created_at" "updated_at".  
  Now, New is blanking the inputs.  Update isn't saving to the database.

TODO: get foreign_key fields to show @instances in a pop-up. 

