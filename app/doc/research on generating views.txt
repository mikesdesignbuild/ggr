Research on how to generate views from class models

MUST use model.rb files 
NOT a static generator using the command line args.

Generates views for index, show, edit, …
Generates controller to handle new, update, etc.

Uses model relationships to generate select options.
Includes javascript validations on the client.

rails generate views Person
rails generate controllers Person

search: rails ruby generate-view-from-model
search: ruby rails generate view and controller form model

——
Best match so far:
Pat Shaughnessy started a project like this called viewmapper (https://rubygems.org/gems/view_mapper/versions/0.3.4, https://github.com/patshaughnessy/view_mapper) 4 years ago.
Updated it for Rails 3, but current http://scaffoldhub.org is no longer active.
There is a github project, but it looks abandoned.

http://patshaughnessy.net/2009/7/24/generating-view-scaffolding-code-for-existing-models

Some interesting introspection code: https://github.com/patshaughnessy/view_mapper/blob/master/lib/view_mapper/model_info.rb

—
New search:
create or generate schema.rb or migrations from class model  
  Note: lots of examples of people creating models from existing schema

Search: create-schema generate-schema.rb  from-model using-introspection

Found tool that uses model introspection to generate class and controller diagrams.
  http://railroad.rubyforge.org

ggr git:(master) ✗ railroad -M
/Library/Ruby/Gems/2.0.0/gems/railroad-0.5.0/lib/railroad/app_diagram.rb:54:in `disable_stdout': uninitialized constant AppDiagram::PLATFORM (NameError)

Left with: error.

Some code using introspection.
https://github.com/patshaughnessy/view_mapper/blob/master/lib/view_mapper/model_info.rb

Final analysis: after searching for over 1 hour, no good examples of using an existing Ruby-on-Rails model to generate either views, controllers, or schemas.  Too bad.  
Scaffold commands can’t representing the full complexity of models.  Should be able to dynamically generate standard views and controllers that support the model, but also support having the user customize specific views and controllers as necessary.

Solution: either manually generate all the views and controllers, or manually create complex scaffold_controller commands to make a first pass at generating the views and controllers.

What I found: 
  the most code generated was for views/_form, show and index (*.html.erb)
  and controller method zarticipation_params.  
  most of those will vary based on roles and create vs. update.

So, just do the work for those forms.  

Could I create a dynamic view that uses Model to display fields based on their type and role?  

Search: rails dynamically-generated views based on model’s runtime meta-data

Microsoft has: Visual Studio 2008 Service Pack 1's new ASP.NET Dynamic Data templates automatically generate code for DataGrid, ListView, DetailsView, and FormView display and editing controls on dynamic pages derived from a master page and CSS stylesheet

http://people.csail.mit.edu/aleks/website/papers/onward13-red.pdf
Aleksandar Milicevic, Daniel Jackson, Model-Based, Event-Driven Programming Paradigm for Interactive Web Applications.  Used Ruby for declarative approach.

—
make dynamically generated forms, by:
given a model class, use introspection to get field names for the instance, and it’s meta-info such as type and presentation

each type of field has a .erb template to display it.  For class Member, see that it has a “name” and “birthdate”.
class Member
 validates :name, presence: true, short_name: true, present_as: one_column
 validates :birthdate, date: true, present_as: two_columns
end

#member_field.two_column.html.erb
<tr><td><%= @field_name %></td><td><%= @field_value %></td></tr>

#member_field.one_column.html.erb
<tr><td colspan=2><%= @field_name %><br/><%= @field_value %></td></tr>

have files:
#short_name.html.erb
<%= text_input %>

#date
<%= date_input %>

Given a current_member’s role, calc how/if to display each field and action.

——
Search: ruby rails introspection model fields validates

SomeClass.validators_on(:some_field)

http://stackoverflow.com/questions/13190724/rails-list-accepted-values-of-validates-inclusion-field

Member.validators_on("email")
y Member.validators_on("email")
 
Question.validators_on(:kind).select{|v| v.kind_of? ActiveModel::Validations::InclusionValidator}.first.options

- !ruby/object:ActiveRecord::Validations::PresenceValidator
- !ruby/object:ActiveRecord::Validations::UniquenessValidator
- !ruby/object:ActiveRecord::Validations::FormatValidator

At console, how to format objects:
http://stackoverflow.com/questions/1224525/how-to-get-nice-formatting-in-the-rails-console
require 'hirb'
Hirb.enable

SomeClass.columns_hash
  .name
  .type
  .primary
  .sql_type   “INTEGER”

Boat.columns_hash["created_at”]
  .datetime
  .type    =  :integer  or :datetime

Could create a custom render method that loops through preferred ordering of fields of a class and looks for a field template based on type.

@user.column_for_attribute(:name)

def column_for_attribute(name)
  self.class.columns_hash[name.to_s]
end

Event.columns_hash.keys[0]  has the default ordering that appears in the model.

——
search: ruby rails application index.html.erb default works-for-all-models


controller_name.classify  to get class model name

list of controller classes is:
Rails.application.eager_load!
ApplicationController.descendants
PostsController.action_methods

ApplicationController.descendants
PostsController.action_methods

In a controller “LocationsController”

params[:controller].classify  RETURNS “Location”

Given a name of a class, how to get the class object?

set default values in before_validation

validators_on(:name) => [first validation, another validation]

—
Debugging: render :text => @some_object.inspect
Rails.logger.debug("My object: #{@some_object.inspect}")
<%= debug(@some_object) %>


